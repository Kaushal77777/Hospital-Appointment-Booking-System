//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Host.HospitalServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HospitalServiceRef.IHospitalService")]
    public interface IHospitalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetUser", ReplyAction="http://tempuri.org/IHospitalService/GetUserResponse")]
        WCFservice.User GetUser(string phone, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetUser", ReplyAction="http://tempuri.org/IHospitalService/GetUserResponse")]
        System.Threading.Tasks.Task<WCFservice.User> GetUserAsync(string phone, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/SetUser", ReplyAction="http://tempuri.org/IHospitalService/SetUserResponse")]
        void SetUser(WCFservice.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/SetUser", ReplyAction="http://tempuri.org/IHospitalService/SetUserResponse")]
        System.Threading.Tasks.Task SetUserAsync(WCFservice.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetSlot", ReplyAction="http://tempuri.org/IHospitalService/GetSlotResponse")]
        WCFservice.Slot GetSlot(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/GetSlot", ReplyAction="http://tempuri.org/IHospitalService/GetSlotResponse")]
        System.Threading.Tasks.Task<WCFservice.Slot> GetSlotAsync(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/SetSlot", ReplyAction="http://tempuri.org/IHospitalService/SetSlotResponse")]
        void SetSlot(WCFservice.Slot slot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHospitalService/SetSlot", ReplyAction="http://tempuri.org/IHospitalService/SetSlotResponse")]
        System.Threading.Tasks.Task SetSlotAsync(WCFservice.Slot slot);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHospitalServiceChannel : Host.HospitalServiceRef.IHospitalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HospitalServiceClient : System.ServiceModel.ClientBase<Host.HospitalServiceRef.IHospitalService>, Host.HospitalServiceRef.IHospitalService {
        
        public HospitalServiceClient() {
        }
        
        public HospitalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HospitalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HospitalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFservice.User GetUser(string phone, string password) {
            return base.Channel.GetUser(phone, password);
        }
        
        public System.Threading.Tasks.Task<WCFservice.User> GetUserAsync(string phone, string password) {
            return base.Channel.GetUserAsync(phone, password);
        }
        
        public void SetUser(WCFservice.User user) {
            base.Channel.SetUser(user);
        }
        
        public System.Threading.Tasks.Task SetUserAsync(WCFservice.User user) {
            return base.Channel.SetUserAsync(user);
        }
        
        public WCFservice.Slot GetSlot(string phone) {
            return base.Channel.GetSlot(phone);
        }
        
        public System.Threading.Tasks.Task<WCFservice.Slot> GetSlotAsync(string phone) {
            return base.Channel.GetSlotAsync(phone);
        }
        
        public void SetSlot(WCFservice.Slot slot) {
            base.Channel.SetSlot(slot);
        }
        
        public System.Threading.Tasks.Task SetSlotAsync(WCFservice.Slot slot) {
            return base.Channel.SetSlotAsync(slot);
        }
    }
}
